Constructing TargetSetup database and copy data from testing database as target ...
DROP SCHEMA IF EXISTS unielwin_target_setup 
create schema unielwin_target_setup 
USE unielwin_target_setup 
SET storage_engine=INNODB 
create table FNodes as select * from unielwin_BN.FNodes 
create table FNodes_pvars as select * from unielwin_BN.FNodes_pvars 
create table PVariables as select * from unielwin_BN.PVariables 
create table EntityTables as select * from unielwin_BN.EntityTables 
create table AttributeColumns as select * from unielwin_BN.AttributeColumns 
create table TernaryRelations as select * from unielwin_BN.TernaryRelations 
create table RelationTables as select * from unielwin_BN.RelationTables 
create table NoPKeys as select * from  unielwin_BN.NoPKeys 
create table ForeignKeyColumns as select * from  unielwin_BN.ForeignKeyColumns 
create table ForeignKeys_pvars as select * from  unielwin_BN.ForeignKeys_pvars 
create table InputColumns as select * from  unielwin_BN.InputColumns 
create table Attribute_Value as select * from  unielwin_BN.Attribute_Value 
create table RNodes_pvars as select * from unielwin_BN.RNodes_pvars 
create table FNodes_pvars_UNION_RNodes_pvars  as select * from unielwin_BN.FNodes_pvars_UNION_RNodes_pvars  
DROP SCHEMA IF EXISTS unielwin_target 
create schema unielwin_target 
CREATE TABLE unielwin_target.RA AS SELECT * FROM unielwin.RA;
CREATE TABLE unielwin_target.course AS SELECT * FROM unielwin.course;
CREATE TABLE unielwin_target.prof AS SELECT * FROM unielwin.prof;
CREATE TABLE unielwin_target.registration AS SELECT * FROM unielwin.registration;
CREATE TABLE unielwin_target.student AS SELECT * FROM unielwin.student;
Constructing TargetSetup and Target databases run time is: 648ms. 
 ******************************** 



pre processing, drop the `MULT` column for all CP tables in unielwin_BN database;

***Already Did the Pre_Process!***

Constructing Markov Blanket...
databasename :unielwin
use unielwin_BN 
drop table if exists TargetParents 
create table TargetParents as  select child as TargetNode, parent as TargetParent from Path_BayesNets where rchain='`a,b`'  and ( child in ( select 1nid from 1Nodes ) or 	  child in ( select 2nid from 2Nodes ) or 	  child in ( select rnid from RNodes ) ) and parent <> '' 
drop table if exists TargetChildren 
create table TargetChildren as select parent as TargetNode, child as TargetChild from Path_BayesNets where rchain='`a,b`' and ( parent in ( select 1nid from 1Nodes ) or 	  parent in ( select 2nid from 2Nodes ) or 	  parent in ( select rnid from RNodes ) ) and child <> '' 
drop table if exists TargetChildrensParents 
create table TargetChildrensParents as select Path_BayesNets.parent as TargetNode, 	   TargetParents.TargetParent as TargetChildParent from TargetParents, Path_BayesNets where TargetParents.TargetNode in  	( select TargetChildren.TargetChild  	  from TargetChildren 	  where TargetChildren.TargetNode = Path_BayesNets.Parent ) and TargetParents.TargetParent <> Path_BayesNets.Parent group by Path_BayesNets.parent, TargetParents.TargetParent 
drop table if exists TargetMB 
create table TargetMB as 	( select TargetNode, TargetParent as TargetMBNode 	  from TargetParents ) 	union distinct 	( select TargetNode, TargetChild as TargetMBNode 	  from TargetChildren )  	union distinct 	( select TargetNode, TargetChildParent as TargetMBNode 	  from TargetChildrensParents ) 	ORDER BY TargetNode 
Markov Blanket construction run time is: 74ms. 
 ******************************** 


Getting functor args...
SELECT pvid FROM FNodes_pvars WHERE Fid = '`intelligence(student0)`';
Added an argument: student0
Functor `intelligence(student0)` has 1 arguments.

**********
Functor: '`intelligence(student0)`'
setup 1node: 
 CREATE TABLE  if not exists 1Nodes AS SELECT * FROM unielwin_BN.1Nodes WHERE 1nid IN (SELECT TargetMBNode FROM unielwin_BN.TargetMB WHERE TargetNode = '`intelligence(student0)`') or 1nid='`intelligence(student0)`';
CREATE TABLE  if not exists 2Nodes AS SELECT * FROM unielwin_BN.2Nodes WHERE 2nid IN (SELECT TargetMBNode FROM unielwin_BN.TargetMB WHERE TargetNode = '`intelligence(student0)`') or 2nid='`intelligence(student0)`';
CREATE TABLE  if not exists RNodes AS SELECT * FROM unielwin_BN.RNodes WHERE rnid IN (SELECT TargetMBNode FROM unielwin_BN.TargetMB WHERE TargetNode = '`intelligence(student0)`') or rnid IN (SELECT rnid FROM unielwin_BN.RNodes_2Nodes WHERE 2nid IN (SELECT  2nid FROM unielwin_target_setup.2Nodes)) or rnid='`intelligence(student0)`';


*****
Entering BayesBaseCT_SortMerge.buildCTTarget() for target and its parents 
DROP SCHEMA IF EXISTS unielwin_target_BN 
create schema unielwin_target_BN 
DROP SCHEMA IF EXISTS unielwin_target_CT 
create schema unielwin_target_CT 
USE unielwin_target_BN 
SET storage_engine=INNODB 
create table 1Nodes as select * from unielwin_target_setup.1Nodes 
create table 2Nodes as select * from unielwin_target_setup.2Nodes 
create table RNodes as select * from unielwin_target_setup.RNodes 
create table PVariables as select * from unielwin_target_setup.PVariables 
create table EntityTables as select * from unielwin_target_setup.EntityTables 
create table AttributeColumns as select * from unielwin_target_setup.AttributeColumns 
create table TernaryRelations as select * from unielwin_target_setup.TernaryRelations 
create table RelationTables as select * from unielwin_target_setup.RelationTables 
create table NoPKeys as select * from  unielwin_target_setup.NoPKeys 
create table ForeignKeyColumns as select * from  unielwin_target_setup.ForeignKeyColumns 
create table ForeignKeys_pvars as select * from  unielwin_target_setup.ForeignKeys_pvars 
create table InputColumns as select * from  unielwin_target_setup.InputColumns 
create table Attribute_Value as select * from  unielwin_target_setup.Attribute_Value 
create table FNodes_pvars_UNION_RNodes_pvars  as select * from unielwin_target_setup.FNodes_pvars_UNION_RNodes_pvars  
create table Test_Node like unielwin_target_setup.Test_Node 
insert into Test_Node select * from unielwin_target_setup.Test_Node 
insert into 1Nodes  SELECT      CONCAT('`', COLUMN_NAME, '(', pvid, ')', '`') AS 1nid,  COLUMN_NAME, pvid, index_number = 0 AS main FROM     EntityTables         natural join     PVariables natural join  FNodes_pvars_UNION_RNodes_pvars natural join  Test_Node 
Drop table if exists Test_1nid  
create table Test_1nid as SELECT      CONCAT('`', COLUMN_NAME, '(', pvid, ')', '`') AS 1nid,  COLUMN_NAME, pvid, index_number = 0 AS main FROM     EntityTables         natural join     PVariables natural join  FNodes_pvars_UNION_RNodes_pvars natural join  Test_Node 
 ##### lattice is ready for use* 
USE unielwin_target_BN 
SET storage_engine=INNODB 
CREATE TABLE FNodes (      `Fid` varchar(199) ,   `FunctorName` varchar(64) ,   `Type` varchar(5) ,   `main` int(11) ,   PRIMARY KEY  (`Fid`) ) 
insert into FNodes SELECT      1nid AS Fid,     COLUMN_NAME as FunctorName,     '1Node' as Type,     main FROM     1Nodes  UNION SELECT      2nid AS Fid,     COLUMN_NAME as FunctorName,     '2Node' as Type,     main FROM     2Nodes  union select      rnid as FID,     TABLE_NAME as FunctorName,     'Rnode' as Type,     main from     RNodes 
create table FNodes_pvars as  SELECT FNodes.Fid, PVariables.pvid FROM     FNodes,     2Nodes,     PVariables where     FNodes.Type = '2Node'     and FNodes.Fid = 2Nodes.2nid     and PVariables.pvid = 2Nodes.pvid1  union  SELECT      FNodes.Fid, PVariables.pvid FROM     FNodes,     2Nodes,     PVariables where     FNodes.Type = '2Node'     and FNodes.Fid = 2Nodes.2nid     and PVariables.pvid = 2Nodes.pvid2  union  SELECT      FNodes.Fid, PVariables.pvid FROM     FNodes,     1Nodes,     PVariables where     FNodes.Type = '1Node'     and FNodes.Fid = 1Nodes.1nid     and PVariables.pvid = 1Nodes.pvid 
create table 1Nodes_Select_List as select 1nid,     concat(1Nodes.pvid,             '.',             1Nodes.COLUMN_NAME,             ' AS ',             1nid) as Entries from     1Nodes,     PVariables where     1Nodes.pvid = PVariables.pvid 
create table 1Nodes_From_List select 1nid,     concat(PVariables.TABLE_NAME,             ' AS ',             PVariables.pvid) as Entries from     1Nodes,     PVariables where     1Nodes.pvid = PVariables.pvid 
create table 2Nodes_Select_List as select 2nid,     concat(RNodes.rnid,             '.',             2Nodes.COLUMN_NAME,             ' AS ',             2nid) as Entries from     2Nodes         NATURAL JOIN     RNodes 
create table 2Nodes_From_List as select 2nid,     concat(2Nodes.TABLE_NAME, ' AS ', RNodes.rnid) as Entries from     2Nodes         NATURAL JOIN     RNodes 
CREATE TABLE PVariables_From_List AS SELECT pvid, CONCAT(TABLE_NAME, ' AS ', pvid) AS Entries FROM     PVariables WHERE     index_number = 0 
CREATE TABLE PVariables_Select_List AS  SELECT      pvid, CONCAT('count(*)',' as "MULT"') AS Entries FROM     PVariables UNION SELECT pvid,     CONCAT(pvid, '.', COLUMN_NAME, ' AS ', 1nid) AS Entries FROM     1Nodes         NATURAL JOIN     PVariables WHERE     PVariables.index_number = 0 
CREATE TABLE RNodes_pvars AS SELECT DISTINCT rnid,     pvid,     PVariables.TABLE_NAME,     ForeignKeyColumns.COLUMN_NAME,     ForeignKeyColumns.REFERENCED_COLUMN_NAME  FROM     ForeignKeyColumns,     RNodes,     PVariables WHERE     pvid1 = pvid         AND ForeignKeyColumns.TABLE_NAME = RNodes.TABLE_NAME         AND ForeignKeyColumns.COLUMN_NAME = RNodes.COLUMN_NAME1         AND ForeignKeyColumns.REFERENCED_TABLE_NAME = PVariables.TABLE_NAME  UNION  SELECT DISTINCT     rnid,     pvid,     PVariables.TABLE_NAME,     ForeignKeyColumns.COLUMN_NAME,     ForeignKeyColumns.REFERENCED_COLUMN_NAME FROM     ForeignKeyColumns,     RNodes,     PVariables WHERE     pvid2 = pvid         AND ForeignKeyColumns.TABLE_NAME = RNodes.TABLE_NAME         AND ForeignKeyColumns.COLUMN_NAME = RNodes.COLUMN_NAME2         AND ForeignKeyColumns.REFERENCED_TABLE_NAME = PVariables.TABLE_NAME 
CREATE TABLE RNodes_From_List AS SELECT DISTINCT rnid, CONCAT('unielwin_target.',TABLE_NAME, ' AS ', pvid) AS Entries FROM     RNodes_pvars  UNION DISTINCT  SELECT DISTINCT     rnid, CONCAT('unielwin_target.',TABLE_NAME, ' AS ', rnid) AS Entries FROM     RNodes  union distinct  select distinct     rnid,     concat('(select "T" as ',             rnid,             ') as ',             concat('`temp_', replace(rnid, '`', ''), '`')) as Entries from     RNodes  
CREATE TABLE RNodes_Where_List AS SELECT rnid,     CONCAT(rnid,             '.',             COLUMN_NAME,             ' = ',             pvid,             '.',             REFERENCED_COLUMN_NAME) AS Entries  FROM     RNodes_pvars       
CREATE TABLE RNodes_1Nodes AS SELECT rnid, TABLE_NAME, 1nid, COLUMN_NAME, pvid1 AS pvid FROM     RNodes,     1Nodes WHERE     1Nodes.pvid = RNodes.pvid1  UNION SELECT      rnid, TABLE_NAME, 1nid, COLUMN_NAME, pvid2 AS pvid FROM     RNodes,     1Nodes WHERE     1Nodes.pvid = RNodes.pvid2 
Create TABLE RNodes_2Nodes as  select RNodes.rnid, 2Nodes.2nid from 2Nodes, RNodes where 2Nodes.TABLE_NAME = RNodes.TABLE_NAME 
CREATE TABLE RNodes_Select_List AS  select      rnid, concat('count(*)',' as "MULT"') AS Entries from     RNodes union SELECT DISTINCT rnid,     CONCAT(pvid, '.', COLUMN_NAME, ' AS ', 1nid) AS Entries  FROM     RNodes_1Nodes  UNION DISTINCT  select temp.rnid,temp.Entries from ( SELECT DISTINCT     rnid,     CONCAT(rnid, '.', COLUMN_NAME, ' AS ', 2nid) AS Entries FROM     2Nodes         NATURAL JOIN     RNodes order by RNodes.rnid,COLUMN_NAME ) as temp UNION distinct  select      rnid, rnid AS Entries from     RNodes    
CREATE TABLE RNodes_GroupBy_List AS SELECT DISTINCT rnid, 1nid AS Entries FROM     RNodes_1Nodes  UNION DISTINCT  SELECT DISTINCT     rnid, 2nid AS Entries FROM     2Nodes         NATURAL JOIN     RNodes  UNION distinct  select      rnid, rnid from     RNodes 
ALTER TABLE `2Nodes` ADD INDEX `index`  (`pvid1` ASC, `pvid2` ASC, `TABLE_NAME` ASC)  
ALTER TABLE `RNodes` ADD INDEX `Index`  (`pvid1` ASC, `pvid2` ASC, `TABLE_NAME` ASC)  
USE unielwin_target_BN 
CREATE TABLE ADT_PVariables_Select_List AS  SELECT      pvid, CONCAT('count(*)',' as "MULT"') AS Entries FROM     PVariables UNION SELECT      pvid,CONCAT(pvid, '.', COLUMN_NAME, ' AS ', 1nid) AS Entries  FROM     1Nodes         NATURAL JOIN     PVariables  
CREATE TABLE ADT_PVariables_From_List AS SELECT pvid, CONCAT('unielwin_target.',TABLE_NAME, ' AS ', pvid) AS Entries FROM     PVariables 
create table PVariables_GroupBy_List as SELECT pvid,     1nid AS Entries FROM     1Nodes         NATURAL JOIN     PVariables 
create table ADT_PVariables_GroupBy_List as SELECT pvid,     1nid AS Entries FROM     1Nodes         NATURAL JOIN     PVariables 
CREATE TABLE ADT_RNodes_1Nodes_Select_List AS  select      rnid, concat('sum(`',replace(rnid, '`', ''),'_counts`.`MULT`)',' as "MULT"') AS Entries from     RNodes union SELECT DISTINCT rnid,     1nid AS Entries FROM     RNodes_1Nodes   
CREATE TABLE ADT_RNodes_1Nodes_FROM_List AS  select      rnid, concat('`',replace(rnid, '`', ''),'_counts`') AS Entries from RNodes  
CREATE TABLE ADT_RNodes_1Nodes_GroupBY_List AS  SELECT DISTINCT rnid,     1nid AS Entries FROM     RNodes_1Nodes   
CREATE TABLE ADT_RNodes_Star_Select_List AS  SELECT DISTINCT rnid,     1nid AS Entries FROM     RNodes_1Nodes 
CREATE TABLE ADT_RNodes_Star_From_List AS  SELECT DISTINCT rnid, concat('`',replace(pvid, '`', ''),'_counts`')     AS Entries FROM     RNodes_pvars 
create table ADT_RNodes_False_Select_List as SELECT DISTINCT rnid, concat('(`',replace(rnid, '`', ''),'_star`.MULT','-','`',replace(rnid, '`', ''),'_flat`.MULT)',' AS "MULT"') as Entries from RNodes union SELECT DISTINCT rnid,     concat('`',replace(rnid, '`', ''),'_star`.',1nid) AS Entries FROM     RNodes_1Nodes 
create table ADT_RNodes_False_FROM_List as SELECT DISTINCT rnid, concat('`',replace(rnid, '`', ''),'_star`') as Entries from RNodes union  select distinct rnid, concat('`',replace(rnid, '`', ''),'_flat`') as Entries from RNodes 
create table ADT_RNodes_False_WHERE_List as SELECT DISTINCT rnid, concat('`',replace(rnid, '`', ''),'_star`.',1nid,'=','`',replace(rnid, '`', ''),'_flat`.',1nid) as Entries from RNodes_1Nodes 
create table Rnodes_join_columnname_list as  select distinct rnid,concat(2nid, ' varchar(5)  default ',' "N/A" ') as Entries from 2Nodes natural join RNodes 
CREATE TABLE RChain_pvars AS select  distinct  	lattice_membership.name as rchain,  	pvid  from  	lattice_membership, RNodes_pvars  where  	RNodes_pvars.rnid = lattice_membership.member 
CREATE TABLE ADT_RChain_Star_From_List AS  SELECT DISTINCT  	lattice_rel.child as rchain,  	lattice_rel.removed as rnid,  	concat('`',replace(lattice_rel.parent,'`',''),'_CT`')  AS Entries  FROM 	lattice_rel where  	lattice_rel.parent <>'EmptySet' union SELECT DISTINCT  	lattice_rel.child as rchain,  	lattice_rel.removed as rnid,  concat('`',replace(RNodes_pvars.pvid, '`', ''),'_counts`')    AS Entries  FROM     lattice_rel,RNodes_pvars where lattice_rel.parent <>'EmptySet' and RNodes_pvars.rnid = lattice_rel.removed and RNodes_pvars.pvid not in (select pvid from RChain_pvars where RChain_pvars.rchain = 	lattice_rel.parent)  
CREATE TABLE ADT_RChain_Star_Where_List AS  SELECT DISTINCT  	lattice_rel.child as rchain,  	lattice_rel.removed as rnid,  	concat(lattice_membership.member,' = "T"')  AS Entries  FROM 	lattice_rel,    lattice_membership where  	lattice_rel.child = lattice_membership.name 	and  lattice_membership.member > lattice_rel.removed 	and lattice_rel.parent <>'EmptySet' 
CREATE TABLE ADT_RChain_Star_Select_List AS  SELECT DISTINCT  	lattice_rel.child as rchain,  	lattice_rel.removed as rnid,  	RNodes_GroupBy_List.Entries  FROM 	lattice_rel,lattice_membership,RNodes_GroupBy_List where  	lattice_rel.parent <>'EmptySet'  and lattice_membership.name = lattice_rel.parent and RNodes_GroupBy_List.rnid = lattice_membership.member union SELECT DISTINCT  	lattice_rel.child as rchain,  	lattice_rel.removed as rnid,  	1Nodes.1nid    AS Entries  FROM     lattice_rel,RNodes_pvars,1Nodes where lattice_rel.parent <>'EmptySet'  and RNodes_pvars.rnid = lattice_rel.removed and RNodes_pvars.pvid = 1Nodes.pvid and  1Nodes.pvid not in (select pvid from RChain_pvars where RChain_pvars.rchain = 	lattice_rel.parent) union SELECT DISTINCT   	lattice_rel.removed as rchain,  	lattice_rel.removed as rnid,  	1Nodes.1nid    AS Entries  FROM     lattice_rel,RNodes_pvars,1Nodes where lattice_rel.parent ='EmptySet'  and RNodes_pvars.rnid = lattice_rel.removed and RNodes_pvars.pvid = 1Nodes.pvid   
Loading configuration...
Failed to find configuration file!
Failed to load configuration.

BayesBaseCT_SortMerge.buildCTTarget() for target and its parents run time is: 828ms. 
 ******************************** 


biggest Rchain in testing database : `a,b` for Functor: '`intelligence(student0)`'
CREATE TABLE unielwin_target_final_CT.`intelligence(student0)_CT` like unielwin_target_db.`local_CT`;
insert  unielwin_target_final_CT.`intelligence(student0)_CT` select * from unielwin_target_db.`local_CT`;




/*creates new schemas, e.g. unielwin_target, unielwin_target_setup
